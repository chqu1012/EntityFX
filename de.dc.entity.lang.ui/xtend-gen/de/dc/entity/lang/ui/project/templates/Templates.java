package de.dc.entity.lang.ui.project.templates;

import org.eclipse.xtend2.lib.StringConcatenation;

@SuppressWarnings("all")
public class Templates {
  public static String genBuildProperties(final boolean useGradle) {
    StringConcatenation _builder = new StringConcatenation();
    {
      if (useGradle) {
        _builder.append("source.. = src/main/java/");
        _builder.newLine();
        _builder.append("output.. = bin/main/java/");
        _builder.newLine();
        _builder.append("bin.includes = META-INF/,\\");
        _builder.newLine();
        _builder.append("               ");
        _builder.append(".");
        _builder.newLine();
        _builder.append("               ");
        _builder.newLine();
      } else {
        _builder.append("source.. = resources/,\\");
        _builder.newLine();
        _builder.append("           ");
        _builder.append("src-gen/,\\");
        _builder.newLine();
        _builder.append("           ");
        _builder.append("src/");
        _builder.newLine();
        _builder.append("bin.includes = META-INF/,\\");
        _builder.newLine();
        _builder.append("               ");
        _builder.append(".");
        _builder.newLine();
        _builder.newLine();
      }
    }
    return _builder.toString();
  }
  
  public static String genMetaInfXml(final String projectName) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("Manifest-Version: 1.0");
    _builder.newLine();
    _builder.append("Bundle-ManifestVersion: 2");
    _builder.newLine();
    _builder.append("Bundle-Name: de.dc.adbook");
    _builder.newLine();
    _builder.append("Bundle-SymbolicName: de.dc.adbook");
    _builder.newLine();
    _builder.append("Bundle-Version: 1.0.0.qualifier");
    _builder.newLine();
    _builder.append("Automatic-Module-Name: de.dc.adbook");
    _builder.newLine();
    _builder.append("Bundle-RequiredExecutionEnvironment: JavaSE-1.8");
    _builder.newLine();
    _builder.append("Require-Bundle: com.google.inject,");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("org.apache.commons.lang,");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("javax.inject,");
    _builder.newLine();
    _builder.append(" ");
    _builder.append("org.apache.commons.io");
    _builder.newLine();
    _builder.newLine();
    return _builder.toString();
  }
  
  public static String genProjectFile(final String projectName, final boolean useGradle) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
    _builder.newLine();
    _builder.append("<projectDescription>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<name>");
    _builder.append(projectName, "\t");
    _builder.append("</name>");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("<comment>Project ");
    _builder.append(projectName, "\t");
    _builder.append(" created by EntityFX.</comment>");
    _builder.newLineIfNotEmpty();
    _builder.append("\t");
    _builder.append("<projects>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("</projects>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<buildSpec>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<buildCommand>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<name>org.eclipse.jdt.core.javabuilder</name>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<arguments>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</arguments>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</buildCommand>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<buildCommand>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<name>org.eclipse.pde.ManifestBuilder</name>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<arguments>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</arguments>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</buildCommand>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<buildCommand>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<name>org.eclipse.pde.SchemaBuilder</name>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("<arguments>");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("</arguments>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("</buildCommand>");
    _builder.newLine();
    {
      if (useGradle) {
        _builder.append("\t\t");
        _builder.append("<buildCommand>");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("<name>org.eclipse.buildship.core.gradleprojectbuilder</name>");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("<arguments>");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("\t");
        _builder.append("</arguments>");
        _builder.newLine();
        _builder.append("\t\t");
        _builder.append("</buildCommand>");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.append("</buildSpec>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<natures>");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("<nature>org.eclipse.jdt.core.javanature</nature>");
    _builder.newLine();
    _builder.append("\t \t");
    _builder.append("<nature>org.eclipse.pde.PluginNature</nature>");
    _builder.newLine();
    {
      if (useGradle) {
        _builder.append("\t \t");
        _builder.append("<nature>org.eclipse.buildship.core.gradleprojectnature</nature>");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.append("</natures>");
    _builder.newLine();
    _builder.append("</projectDescription>");
    _builder.newLine();
    _builder.newLine();
    return _builder.toString();
  }
  
  public static String genBuildGradle() {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("buildscript {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("ext {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("springBootVersion = \'+\'");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("repositories {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("mavenCentral()");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("maven { url \"http://maven.bestsolution.at/efxclipse-releases/\" }");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("maven { url \"https://mvnrepository.com/\" }");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("maven { url \"https://repo.spring.io/snapshot\" }");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("maven { url \"https://repo.spring.io/milestone\" }");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("dependencies {");
    _builder.newLine();
    _builder.append("\t\t");
    _builder.append("classpath(\"org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}\")");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("}");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("apply plugin: \'java\'");
    _builder.newLine();
    _builder.append("apply plugin: \'eclipse\'");
    _builder.newLine();
    _builder.append("apply plugin: \'org.springframework.boot\'");
    _builder.newLine();
    _builder.append("apply plugin: \'io.spring.dependency-management\'");
    _builder.newLine();
    _builder.newLine();
    _builder.append("version = \'0.0.1-SNAPSHOT\'");
    _builder.newLine();
    _builder.append("sourceCompatibility = 1.8");
    _builder.newLine();
    _builder.newLine();
    _builder.append("repositories {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("mavenCentral()");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("maven { url \"https://mvnrepository.com/\" }");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("maven { url \"http://maven.bestsolution.at/efxclipse-releases/\" }");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("maven { url \"https://repo.spring.io/snapshot\" }");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("maven { url \"https://repo.spring.io/milestone\" }");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    _builder.newLine();
    _builder.append("dependencies {");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("compile(\'org.springframework.boot:spring-boot-starter-data-jpa\')");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("compile(\'org.springframework.boot:spring-boot-starter-validation\')");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("compile group: \'com.jfoenix\', name: \'jfoenix\', version: \'8.0.2\'");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("compile group: \'org.controlsfx\', name: \'controlsfx\', version: \'8.40.14\'");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("runtime(\'com.h2database:h2\')");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("compile group: \'org.jfxtras\', name: \'jfxtras-labs\', version: \'8.0-r5\'");
    _builder.newLine();
    _builder.append("\t");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("compile group: \'org.eclipse.emf\', name: \'org.eclipse.emf.common\', version: \'2.15.0\'");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("compile group: \'org.eclipse.emf\', name: \'org.eclipse.emf.ecore\', version: \'2.15.0\'");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("compile group: \'org.eclipse.emf\', name: \'org.eclipse.emf.ecore.xmi\', version: \'2.15.0\'");
    _builder.newLine();
    _builder.newLine();
    _builder.append("\t");
    _builder.append("compile group: \'at.bestsolution.efxclipse.rt\', name: \'org.eclipse.fx.ui.controls\', version: \'2.5.0\'");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("compile group: \'at.bestsolution.efxclipse.rt\', name: \'org.eclipse.fx.ui.dialogs\', version: \'2.5.0\'");
    _builder.newLine();
    _builder.append("}");
    _builder.newLine();
    return _builder.toString();
  }
  
  public static String genClasspathXml(final boolean useGradle) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("<?xml version=\"1.0\" encoding=\"UTF-8\"?>");
    _builder.newLine();
    _builder.append("<classpath>");
    _builder.newLine();
    {
      if (useGradle) {
        _builder.append("\t");
        _builder.append("<classpathentry kind=\"src\" output=\"bin/main\" path=\"src/main/java\">");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("<attributes>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.append("<attribute name=\"gradle_scope\" value=\"main\"/>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.append("<attribute name=\"gradle_used_by_scope\" value=\"main,test\"/>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("</attributes>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("</classpathentry>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("<classpathentry kind=\"src\" output=\"bin/main\" path=\"src/main/resources\">");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("<attributes>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.append("<attribute name=\"gradle_scope\" value=\"main\"/>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t\t");
        _builder.append("<attribute name=\"gradle_used_by_scope\" value=\"main,test\"/>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("\t");
        _builder.append("</attributes>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("</classpathentry>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("<classpathentry kind=\"src\" path=\"src/main/java\"/>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("<classpathentry kind=\"src\" path=\"src/main/resources\"/>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("<classpathentry kind=\"output\" path=\"bin/default\"/>");
        _builder.newLine();
      } else {
        _builder.append("\t");
        _builder.append("<classpathentry kind=\"src\" path=\"src/\"/>");
        _builder.newLine();
        _builder.append("\t");
        _builder.append("<classpathentry kind=\"src\" path=\"resources\"/>");
        _builder.newLine();
      }
    }
    _builder.append("\t");
    _builder.append("<classpathentry kind=\"src\" path=\"src-gen\"/>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<classpathentry kind=\"con\" path=\"org.eclipse.pde.core.requiredPlugins\"/>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<classpathentry kind=\"con\" path=\"org.eclipse.jdt.launching.JRE_CONTAINER/org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType/JavaSE-1.8/\"/>");
    _builder.newLine();
    _builder.append("\t");
    _builder.append("<classpathentry kind=\"con\" path=\"org.eclipse.buildship.core.gradleclasspathcontainer\"/>");
    _builder.newLine();
    _builder.append("</classpath>");
    _builder.newLine();
    return _builder.toString();
  }
}
